name: ESP-IDF image

on:
  push:
    branches: [master]
    paths:
      - "esp-idf/**"
      - ".github/workflows/esp-idf.yml"
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: esp-idf

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        idf_tag: [release-v5.4, release-v5.5, latest]
        llvm_version: [19]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute image URI and tags
        id: vars
        shell: bash
        run: |
          set -euo pipefail
          IMAGE_URI="${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}"
          RAW="${{ matrix.idf_tag }}"
          LLVM="${{ matrix.llvm_version }}"

          if [[ "$RAW" == "latest" ]]; then
            CLEAN="latest"
          else
            CLEAN="${RAW#release-}"
            CLEAN="${CLEAN#v}"
          fi

          if [[ "$CLEAN" == "latest" ]]; then
            T1="latest-llvm${LLVM}"
            T2="latest"
          else
            T1="${CLEAN}-llvm${LLVM}"
            T2="${CLEAN}"
          fi

          echo "image_uri=$IMAGE_URI" >> $GITHUB_OUTPUT
          echo "t1=$T1" >> $GITHUB_OUTPUT
          echo "t2=$T2" >> $GITHUB_OUTPUT

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./esp-idf
          push: true
          tags: |
            ${{ steps.vars.outputs.image_uri }}:${{ steps.vars.outputs.t1 }}
            ${{ steps.vars.outputs.image_uri }}:${{ steps.vars.outputs.t2 }}
          build-args: |
            IDF_TAG=${{ matrix.idf_tag }}
            LLVM_VERSION=${{ matrix.llvm_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
